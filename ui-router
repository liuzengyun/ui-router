今天讲下angular ui-router嵌套路由控制

效果就是导航界面中套tab页面

1. 首先下载ui-router.js插件，下载地址：http://www.bootcdn.cn/angular-ui-router/，http://www.bootcdn.cn/基本什么都可以下载
2. 构建界面(引入了bootstrap，jquery)

<1> (main.html)

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <meta charset="utf-8"/>
    <link rel="stylesheet" type="text/css" href="../css/bootstrap.min.css"/>
    <script type="text/javascript" src="../js/jquery-1.11.3.min.js"></script>
    <script type="text/javascript" src="../js/bootstrap.min.js"></script>
    <script src="../js/angular-1.4.8.js"></script>
    <script src="../js/angular-ui-router.min.js"></script>
    <script type="text/javascript">
        var myApp = angular.module("myApp", ['ui.router']);
        myApp.config(function ($stateProvider, $urlRouterProvider) {
            // 设置首次进入，加载界面
            $urlRouterProvider.when("", "/home");
            // 设置路由
            $stateProvider
                    .state("home", {
                        url: "/home",
                        templateUrl: "home.html"
                    })
                    .state("PageTab", {
                        url: "/PageTab",
                        templateUrl: "PageTab.html"
                    })
                    .state("PageTab.Page1", {
                        url: "/Page1",
                        templateUrl: "Page1.html"
                    })
                    .state("PageTab.Page2", {
                        url: "/Page2",
                        templateUrl: "Page2.html"
                    })
                    .state("PageTab.Page3", {
                        url: "/Page3",
                        templateUrl: "Page3.html"
                    });
        });
    </script>
</head>
<body ng-app="myApp">
<nav class="navbar navbar-default" role="navigation">
    <div class="navbar-header">
        <button type="button" class="navbar-toggle" data-toggle="collapse"
                data-target="#example-navbar-collapse">
            <span class="sr-only">切换导航</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="#">ui-router</a>
    </div>
    <div class="collapse navbar-collapse" id="example-navbar-collapse">
        <ul class="nav navbar-nav">
          <!-- 设置ui-sref=""跳转界面 -->
            <li><a ui-sref="home">首页</a></li>
            <li><a ui-sref="PageTab">界面</a></li>
        </ul>
    </div>
</nav>
<div class="container">
    <div ui-view></div>
</div>
</body>
</html>

<2> (home.html)

<div>
    <div>
        <h1>公司首页</h1>
    </div>
</div>

<3> (PageTab)

<div>
    <div>
        <ul id="myTab" class="nav nav-tabs">
          <!-- ui-sref-active选中状态 -->
            <li ui-sref-active="active">
                <a ui-sref=".Page1" href="javascript:;">Page-1</a>
            </li>
            <li ui-sref-active="active"><a ui-sref=".Page2" href="javascript:;">Page-2</a></li>
            <li ui-sref-active="active"><a ui-sref=".Page3" href="javascript:;">Page-3</a></li>
        </ul>
    </div>
    <div>
        <!--默认为空tab页面-->
        <!--<div ui-view></div>-->

        <!--默认激活Page1.html界面-->
        <ui-view>
            <!--显示默认页-->
            <div ng-include="'Page1.html'"></div>
        </ui-view>
    </div>
</div>

<4> (page1.html)

<div>
    <div>
        <h1>Page 1 content goes here...</h1>
    </div>
</div>

<5> (page2.html)

<div>
    <div>
        <h1>Page 2 content goes here...</h1>
    </div>
</div>

<6> (page3.html)

<div>
    <div>
        <h1>Page 3 content goes here...</h1>
    </div>
</div>

好了大功告成，就可以测试了，注意我为了测试，js写在界面中的，如果以后做项目是要分离加载的。
